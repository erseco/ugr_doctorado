name: Generate docs

on:
  push:
    branches: [ main ]
  release:
    types: [ created ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up R
      uses: r-lib/actions/setup-r@v2
      with:
        use-public-rspm: true

    - name: Install packages
      uses: r-lib/actions/setup-r-dependencies@v2
      with:
        cache-version: 2
        packages: |
          any::rmarkdown
          any::knitr
    
    - name: Setup Pandoc
      uses: r-lib/actions/setup-pandoc@v2

    - name: Set up Tectonic
      uses: wtfjoke/setup-tectonic@v3
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}

  
    # - name: Genera pdf de prueba
    #   run: |
    #     rmarkdown::render('sample.Rmd', output_format = rmarkdown::pdf_document(latex_engine = 'tectonic'), output_file = 'sample.pdf' )
    #   shell: Rscript {0}        


    # - run: docker run --rm -v $PWD:/workspace ghcr.io/marp-team/marp-cli:latest --version
    # - run: npx @marp-team/marp-cli@latest --version
    - name: Set up Marp
      run: npm install -g @marp-team/marp-cli

    - name: Generate PDFs
      run: make slides

    - name: Upload PDFs to Pre-release
      if: github.event_name == 'push'
      uses: actions/upload-artifact@v3
      with:
        name: PDFs
        path: output/**/*.pdf
        prerelease: true
        tag: pre-release
        allowUpdates: true

    - name: Release PDFs
      if: github.event_name == 'release'
      uses: ncipollo/release-action@v1
      with:
        artifacts: 'output/**/*.pdf'
        token: ${{ secrets.GITHUB_TOKEN }}
